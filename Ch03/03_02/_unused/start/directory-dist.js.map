{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","Filters","updateName","evt","updateFormState","target","value","updateTitle","updateIntern","checked","resetFilters","currentName","currentTitle","titles","key","display","isIntern","Directory","state","isLoaded","peopleData","bind","updateFormStateAll","updatePeopleList","showPeople","val","setState","spec","axios","get","then","response","data","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  'use strict';\n\n  function Person(props) {\n    return (\n        <div className='person'>\n          <h3>{props.person.name}, {props.person.title}</h3>\n\n          <p>\n            <img className=\"size-medium alignright\" src={props.person.img}\n                 alt={props.person.name} width=\"300\" height=\"300\"\n                 sizes=\"(max-width: 300px) 100vw, 300px\"/>\n            {props.person.bio}\n          </p>\n        </div>\n    );\n  }\n\n  function People(props) {\n    return (\n        <div className='results'>\n          <ReactTransitionGroup.TransitionGroup>\n          {props.people.map(function (person) {\n            return (\n                <ReactTransitionGroup.CSSTransition timeout={500} classNames='fade' key={person.id}>\n                <Person person={person} />\n                </ReactTransitionGroup.CSSTransition>\n            );\n          })}\n          </ReactTransitionGroup.TransitionGroup>\n        </div>\n    );\n  }\n\n  function Filters(props) {\n    function updateName(evt) {\n      props.updateFormState({'currentName': evt.target.value});\n    }\n\n    function updateTitle(evt) {\n      props.updateFormState({'currentTitle': evt.target.value});\n    }\n\n    function updateIntern(evt) {\n      props.updateFormState({'isIntern': evt.target.checked});\n    }\n\n    function resetFilters() {\n      props.updateFormState({\n        'currentName': '',\n        'currentTitle': '',\n        'isIntern': false\n      });\n    }\n\n    return (\n        <form id=\"directory-filters\">\n          <div className=\"group\">\n            <label htmlFor=\"person-name\">Name:</label>\n            <input type=\"text\" name=\"person_name\" placeholder=\"Name of employee\" id=\"person-name\" value={props.currentName} onChange={updateName} />\n          </div>\n          <div className=\"group\">\n            <label htmlFor=\"person-title\">Job Title:</label>\n            <select name=\"person_title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n              <option key=\"none\" value=\"\">- Select -</option>\n              {props.titles.map(function(title) {\n                return <option key={title.key} value={title.key}>{title.display}</option>\n              })}\n            </select>\n          </div>\n          <div className=\"group\">\n            <label><input type=\"checkbox\" value=\"1\" name=\"person_intern\" checked={props.isIntern} onChange={updateIntern} /> Intern</label>\n          </div>\n          <div className=\"group\">\n            <input type=\"reset\" value=\"Reset\" onClick={resetFilters} />\n          </div>\n        </form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: [],\n        titles: [],\n        currentName: '',\n        currentTitle: '',\n        isIntern: false,\n        isLoaded: false\n      };\n      \n      // cache the people data so we only do one AJAX call\n      this.peopleData = [];\n\n      this.updateFormState = this.updateFormState.bind(this);\n      this.updateFormStateAll = this.updateFormStateAll.bind(this);\n      this.updatePeopleList = this.updatePeopleList.bind(this);\n      this.showPeople = this.showPeople.bind(this);\n    }\n\n    updateFormState(name, val) {\n      this.setState({\n        [name]: val\n      }, this.updatePeopleList);\n    }\n\n    updateFormStateAll(spec) {\n      this.setState(spec, this.updatePeopleList);\n    }\n\n    componentDidMount() {\n      axios.get('./data.json')\n          .then(function(response) {\n            this.peopleData = response.data.people;\n          \n            this.setState({\n              isLoaded: true,\n              people: this.peopleData,\n              titles: response.data.titles,\n            });\n          }.bind(this));\n    }\n\n    // search the whole employee list with current filters\n    updatePeopleList() {\n      var filteredPeople = this.peopleData.filter(function(person) {\n        return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === '' || person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !== -1) &&\n            (this.state.currentTitle === '' || person.title_cat === this.state.currentTitle)\n        );\n      }.bind(this));\n\n      this.setState({\n        people: filteredPeople\n      });\n    }\n\n    showPeople() {\n      if (this.state.isLoaded) {\n        return <People people={this.state.people} />;\n      } else {\n        return <div className='loading'>Loading…</div>\n      }\n    }\n\n    render() {\n      const isLoaded = this.state.isLoaded;\n      \n      let people = null;\n      if (isLoaded) {\n        people = <People people={this.state.people} />;\n      } else {\n        people = <div className='loading'>Loading…</div>;\n      }\n    \n      return (\n          <div className=\"company-directory\">\n            <h2>Company Directory</h2>\n            <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n\n            <Filters titles={this.state.titles} currentName={this.state.currentName} currentTitle={this.state.currentTitle} isIntern={this.state.isIntern} updateFormState={this.updateFormStateAll} />\n\n            {people}\n          </div>\n      );\n    }\n  }\n\n  ReactDOM.render(<Directory/>, document.getElementById('directory-root'));\n\n})();"]}